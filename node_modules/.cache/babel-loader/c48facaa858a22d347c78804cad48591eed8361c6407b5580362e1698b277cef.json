{"ast":null,"code":"var _jsxFileName = \"/Users/austin_baik/Development/code/phase-3/phase-3-project/phase-3-my-app-frontend/src/Brand.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport './App.css';\nimport NewWatch from './NewWatch';\nimport BrandWatchCard from \"./BrandWatchCard\";\n\n//rendered the individual watch cards for a given brand.id \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Brand(_ref) {\n  _s();\n  let {\n    brandsArr\n  } = _ref;\n  const {\n    brandId\n  } = useParams();\n  // console.log(\"id\", brandId)\n  const [brandWatches, setBrandWatches] = useState([]);\n  console.log(\"brandsArr\", brandsArr);\n  useEffect(() => {\n    // console.log(\"brandsArr\", brandsArr)\n    // console.log(\"brandsArr.l\", brandsArr.length)\n\n    if (brandsArr.length > 0) {\n      let foundBrand = brandsArr.find(brand => brand.id == brandId);\n      console.log();\n      setBrandWatches(foundBrand);\n    }\n  }, [brandsArr]);\n\n  // creates useEffect that runs when brandsArr changes \n  // once it changes, find the particular brand by Id \n\n  // set state with the array? \n  //.find on the Id\n  // then render the watches \n\n  console.log('brandwatches', brandWatches);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: brandWatches.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), brandWatches.watches.map(watch => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BrandWatchCard, {\n          brandWatch: watch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(NewWatch, {\n      brandId: brandId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Brand, \"idXxN0u0lGTHaqUEFH0HtEqFqII=\", false, function () {\n  return [useParams];\n});\n_c = Brand;\nexport default Brand;\nvar _c;\n$RefreshReg$(_c, \"Brand\");","map":{"version":3,"names":["React","useEffect","useState","useParams","NewWatch","BrandWatchCard","Brand","brandsArr","brandId","brandWatches","setBrandWatches","console","log","length","foundBrand","find","brand","id","name","watches","map","watch"],"sources":["/Users/austin_baik/Development/code/phase-3/phase-3-project/phase-3-my-app-frontend/src/Brand.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom'\nimport './App.css';\nimport NewWatch from './NewWatch'\nimport BrandWatchCard from \"./BrandWatchCard\";\n\n//rendered the individual watch cards for a given brand.id \n\n\n\n\nfunction Brand({ brandsArr }) {\n\n    const { brandId } = useParams();\n    // console.log(\"id\", brandId)\n    const [brandWatches, setBrandWatches] = useState([])\n\n    console.log(\"brandsArr\", brandsArr)\n\n    useEffect(() => {\n        // console.log(\"brandsArr\", brandsArr)\n        // console.log(\"brandsArr.l\", brandsArr.length)\n\n\n        if (brandsArr.length > 0) {\n            let foundBrand = brandsArr.find(brand => brand.id == brandId)\n            console.log();\n            setBrandWatches(foundBrand)\n        }\n    }, [brandsArr])\n\n    // creates useEffect that runs when brandsArr changes \n    // once it changes, find the particular brand by Id \n\n    // set state with the array? \n    //.find on the Id\n    // then render the watches \n\n    console.log('brandwatches', brandWatches)\n    return (\n\n        <div>\n\n\n            <h1>{brandWatches.name}</h1>\n            {/* map through the watches in the brand and render the cards  */}\n            {brandWatches.watches.map((watch) => {\n                return (\n                    <div>\n                        <BrandWatchCard brandWatch={watch} />\n                    </div>\n                )\n            })}\n\n            <NewWatch brandId={brandId} />\n            {/* need to pass down brand_id */}\n\n        </div >\n\n\n\n\n\n\n\n\n    )\n}\n\n\n\nexport default Brand;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,kBAAkB;;AAE7C;AAAA;AAKA,SAASC,KAAK,OAAgB;EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC;EAExB,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,EAAE;EAC/B;EACA,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpDS,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEL,SAAS,CAAC;EAEnCN,SAAS,CAAC,MAAM;IACZ;IACA;;IAGA,IAAIM,SAAS,CAACM,MAAM,GAAG,CAAC,EAAE;MACtB,IAAIC,UAAU,GAAGP,SAAS,CAACQ,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,IAAIT,OAAO,CAAC;MAC7DG,OAAO,CAACC,GAAG,EAAE;MACbF,eAAe,CAACI,UAAU,CAAC;IAC/B;EACJ,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;;EAEf;EACA;;EAEA;EACA;EACA;;EAEAI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,YAAY,CAAC;EACzC,oBAEI;IAAA,wBAGI;MAAA,UAAKA,YAAY,CAACS;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,EAE3BT,YAAY,CAACU,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAK;MACjC,oBACI;QAAA,uBACI,QAAC,cAAc;UAAC,UAAU,EAAEA;QAAM;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACnC;IAEd,CAAC,CAAC,eAEF,QAAC,QAAQ;MAAC,OAAO,EAAEb;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAG3B;AAUf;AAAC,GAxDQF,KAAK;EAAA,QAEUH,SAAS;AAAA;AAAA,KAFxBG,KAAK;AA4Dd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}