{"ast":null,"code":"var _jsxFileName = \"/Users/austin_baik/Development/code/phase-3/phase-3-project/phase-3-my-app-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Home';\nimport Brands from './Brands.js';\nimport Brand from './Brand.js';\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [brands, setBrands] = useState([]);\n  //when new brand is added, make POST api call, then send the new brand up to *THIS* parent component \n  //add to the 'brands' array setBrands[...brands, newBrand] which updates this component \n\n  //adding new watch to state \n  //search through and find the brand_id \n  //then find object. if object exists, nothing, else add object\n\n  function addNewWatchToStateArr(data) {\n    console.log('data in app.js function', data);\n    let brandId = data.brand_id;\n    let watchId = data.id;\n    let brandObject = brands.find(brand => brand.id == brandId);\n    let arrayWatchesOfBrand = brandObject.watches;\n    if (arrayWatchesOfBrand.find(watch => watch.id == watchId)) {\n      return arrayWatchesOfBrand;\n    } else {\n      arrayWatchesOfBrand.push(data);\n      //  block of code to be executed if the condition is false\n    }\n\n    // brandObject.watches = arrayWatchesOfBrand\n\n    const newArr = brands.map(obj => {\n      if (obj.id === brandId) {\n        return {\n          ...obj,\n          watches: arrayWatchesOfBrand\n        };\n      }\n      return obj;\n    });\n    setBrands(newArr);\n  }\n  function deleteWatchFromStateArray(data) {\n    console.log('data in app.js function', data);\n    let brandId = data.brand_id;\n    let watchId = data.id;\n    let brandObject = brands.find(brand => brand.id == brandId);\n    let arrayWatchesOfBrand = brandObject.watches;\n    const updatedArray = arrayWatchesOfBrand.filter(watch => watch.id !== watchId);\n    const newArr = brands.map(obj => {\n      if (obj.id === brandId) {\n        return {\n          ...obj,\n          watches: updatedArray\n        };\n      }\n      return obj;\n    });\n    setBrands(newArr);\n  }\n\n  // API call to db for list of Brands \n  useEffect(() => {\n    fetch(\"http://localhost:9292/brands\").then(r => r.json()).then(brands => setBrands(brands));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/brands\",\n          element: /*#__PURE__*/_jsxDEV(Brands, {\n            brandsArr: brands,\n            setBrands: setBrands\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/brand/:brandId\",\n          element: /*#__PURE__*/_jsxDEV(Brand, {\n            brandsArr: brands,\n            addNewWatchToStateArr: addNewWatchToStateArr,\n            deleteWatchFromStateArray: deleteWatchFromStateArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wdOz5+4LczRmGT1CBPATNYyq2X0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Home","Brands","Brand","React","useEffect","useState","BrowserRouter","Routes","Route","App","brands","setBrands","addNewWatchToStateArr","data","console","log","brandId","brand_id","watchId","id","brandObject","find","brand","arrayWatchesOfBrand","watches","watch","push","newArr","map","obj","deleteWatchFromStateArray","updatedArray","filter","fetch","then","r","json"],"sources":["/Users/austin_baik/Development/code/phase-3/phase-3-project/phase-3-my-app-frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Home from './Home'\nimport Brands from './Brands.js'\nimport Brand from './Brand.js'\n\nimport React, { useEffect, useState } from \"react\";\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\nexport default function App() {\n\n  const [brands, setBrands] = useState([])\n  //when new brand is added, make POST api call, then send the new brand up to *THIS* parent component \n  //add to the 'brands' array setBrands[...brands, newBrand] which updates this component \n\n  //adding new watch to state \n  //search through and find the brand_id \n  //then find object. if object exists, nothing, else add object\n\n  function addNewWatchToStateArr(data) {\n\n    console.log('data in app.js function', data);\n    let brandId = data.brand_id\n    let watchId = data.id\n\n    let brandObject = brands.find(brand => brand.id == brandId)\n    let arrayWatchesOfBrand = brandObject.watches\n\n    if (arrayWatchesOfBrand.find(watch => watch.id == watchId)) {\n      return arrayWatchesOfBrand\n    } else {\n      arrayWatchesOfBrand.push(data)\n      //  block of code to be executed if the condition is false\n    }\n\n    // brandObject.watches = arrayWatchesOfBrand\n\n    const newArr = brands.map(obj => {\n      if (obj.id === brandId) {\n        return { ...obj, watches: arrayWatchesOfBrand };\n      }\n\n      return obj\n\n    });\n\n    setBrands(newArr)\n\n  }\n\n  function deleteWatchFromStateArray(data) {\n\n    console.log('data in app.js function', data);\n    let brandId = data.brand_id\n    let watchId = data.id\n\n\n\n    let brandObject = brands.find(brand => brand.id == brandId)\n    let arrayWatchesOfBrand = brandObject.watches\n\n    const updatedArray = arrayWatchesOfBrand.filter((watch) => watch.id !== watchId);\n\n    const newArr = brands.map(obj => {\n      if (obj.id === brandId) {\n        return { ...obj, watches: updatedArray };\n      }\n\n      return obj\n\n    });\n\n    setBrands(newArr)\n\n  }\n\n\n\n  // API call to db for list of Brands \n  useEffect(() => {\n    fetch(\"http://localhost:9292/brands\")\n      .then((r) => r.json())\n      .then((brands) => setBrands(brands));\n  }, [])\n\n  return (\n    <div>\n      <BrowserRouter>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Routes>\n\n          <Route path=\"/brands\" element={<Brands brandsArr={brands} setBrands={setBrands} />} />\n\n          <Route path=\"/brand/:brandId\" element={\n            <Brand\n              brandsArr={brands}\n              addNewWatchToStateArr={addNewWatchToStateArr}\n              deleteWatchFromStateArray={deleteWatchFromStateArray}\n\n            />} />\n\n\n          {/* <Route path=\"/brand[:id]\">\n            <Favorites />\n          </Route> */}\n\n          <Route path=\"/\" element={<Home />} />\n\n        </Routes>\n\n      </BrowserRouter>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}